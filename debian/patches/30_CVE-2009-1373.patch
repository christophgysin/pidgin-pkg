#
#
# patch "libpurple/protocols/jabber/si.c"
#  from [89f1f349908491771cadac3c2ba0fbf7c247688b]
#    to [2ce201c9610896b48e8165a6296d1fdbc1285c14]
# (munged for 2.4.3 in Debian)
#
============================================================
--- libpurple/protocols/jabber/si.c	89f1f349908491771cadac3c2ba0fbf7c247688b
+++ libpurple/protocols/jabber/si.c	2ce201c9610896b48e8165a6296d1fdbc1285c14
@@ -354,7 +354,7 @@ jabber_si_xfer_bytestreams_send_read_aga
 	PurpleXfer *xfer = data;
 	JabberSIXfer *jsx = xfer->data;
 	int i;
-	char buffer[256];
+	char buffer[42]; /* 40 for DST.ADDR + 2 bytes for port number*/
 	int len;
 	char *dstaddr, *p;
 	const char *host;
@@ -378,7 +378,7 @@ jabber_si_xfer_bytestreams_send_read_aga
 		jsx->rxlen += len;
 		return;
 	} else if(jsx->rxqueue[0] != 0x05 || jsx->rxqueue[1] != 0x01 ||
-			jsx->rxqueue[3] != 0x03) {
+			jsx->rxqueue[3] != 0x03 || jsx->rxqueue[4] != 40) {
 		purple_debug_info("jabber", "invalid socks5 stuff\n");
 		purple_input_remove(xfer->watcher);
 		xfer->watcher = 0;
@@ -415,7 +415,7 @@ jabber_si_xfer_bytestreams_send_read_aga
 	for(i=0; i<20; i++, p+=2)
 		snprintf(p, 3, "%02x", hashval[i]);
 
-	if(jsx->rxqueue[4] != 40 || strncmp(dstaddr, jsx->rxqueue+5, 40) ||
+	if(strncmp(dstaddr, jsx->rxqueue + 5, 40) ||
 			jsx->rxqueue[45] != 0x00 || jsx->rxqueue[46] != 0x00) {
 		purple_debug_error("jabber", "someone connected with the wrong info!\n");
 		close(source);
@@ -478,6 +478,7 @@ jabber_si_xfer_bytestreams_send_read_res
 			jabber_si_xfer_bytestreams_send_read_again_cb, xfer);
 		g_free(jsx->rxqueue);
 		jsx->rxqueue = NULL;
+		jsx->rxlen = 0;
 	} else {
 		close(source);
 		purple_xfer_cancel_remote(xfer);
